image: golang:1.14

before_script:
  - export GO_PROJECT_PATH="$GOPATH/src/github.com/$CI_PROJECT_NAMESPACE"
  - echo $GO_PROJECT_PATH
  - mkdir -p $GO_PROJECT_PATH
  - ln -s $(pwd) $GO_PROJECT_PATH
  - export GO_PROJECT_PATH="$GO_PROJECT_PATH/$CI_PROJECT_NAME"
  - echo $GO_PROJECT_PATH
  - cd $GO_PROJECT_PATH

stages:
  - test
  - style
  - build

go_vet:
  stage: test
  script:
    - cd server
    - go fmt $(go list ./... | grep -v /vendor/)
    - go vet $(go list ./... | grep -v /vendor/)

golint:
  stage: style
  script:
    - go get -u golang.org/x/lint/golint/...
    - go get -u github.com/tebeka/go2xunit
    - out=$(golint $(go list ./... | grep -v "vendor"))
    - if [ "$out" ]; then echo "$out"; exit 1; fi

docker-build-master:
  inherit:
    default: false
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE" .
    - docker push "$CI_REGISTRY_IMAGE"
  only:
    - master

docker-build:
  image: docker:latest
  inherit:
    default: false
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
  except:
    - master
